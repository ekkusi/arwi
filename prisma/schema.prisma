generator client {
  provider = "prisma-client-js"
  binaryTargets   = ["native", "debian-openssl-1.1.x", "darwin-arm64", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Teacher {
  id                    String  @id @default(uuid())
  email                 String  @unique
  passwordHash          String
  class                 Class[]
}

model Class {
  id                    String                 @id @default(uuid())
  name                  String
  students              Student[]
  evaluationCollections EvaluationCollection[]
  teacher               Teacher                @relation(fields: [teacherId], references: [id], onDelete: Cascade)
  teacherId             String
}

model EvaluationCollection {
  id          String       @id @default(uuid())
  date        DateTime     @default(now())
  type        String
  description String?
  evaluations Evaluation[]
  class       Class        @relation(fields: [classId], references: [id], onDelete: Cascade)
  classId     String
}

model Evaluation {
  id                     String               @id @default(uuid())
  student                Student              @relation(fields: [studentId], references: [id])
  studentId              String
  skillsRating           Int?
  behaviourRating        Int?
  notes                  String?
  evaluationCollection   EvaluationCollection @relation(fields: [evaluationCollectionId], references: [id], onDelete: Cascade)
  evaluationCollectionId String
}

model Student {
  id         String       @id @default(uuid())
  name       String
  class      Class        @relation(fields: [classId], references: [id], onDelete: Cascade)
  classId    String
  evaluations Evaluation[]
}
