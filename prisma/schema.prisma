generator client {
  provider = "prisma-client-js"
  binaryTargets   = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Teacher {
  id                    String  @id @default(uuid())
  email                 String  @unique
  passwordHash          String
  groups                Group[]
}

model Group {
  id                    String                 @id @default(uuid())
  name                  String
  students              Student[]
  evaluationCollections EvaluationCollection[]
  subjectCode           String
  teacher               Teacher                @relation(fields: [teacherId], references: [id], onDelete: Cascade)
  teacherId             String
  updatedAt             DateTime               @updatedAt @default(now())
}

model EvaluationCollection {
  id                    String       @id @default(uuid())
  date                  DateTime     @default(now())
  type                  String
  description           String?
  evaluations           Evaluation[]
  environmentCode       String
  group                 Group        @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId               String
}

model Evaluation {
  id                     String               @id @default(uuid())
  student                Student              @relation(fields: [studentId], references: [id], onDelete: Cascade)
  wasPresent             Boolean              @default(true)
  studentId              String
  skillsRating           Rating?
  behaviourRating        Rating?
  notes                  String?
  evaluationCollection   EvaluationCollection @relation(fields: [evaluationCollectionId], references: [id], onDelete: Cascade)
  evaluationCollectionId String
}

model Student {
  id         String       @id @default(uuid())
  name       String
  group      Group        @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId    String
  evaluations Evaluation[]
}

enum Rating {
  POOR
  FAIR
  GOOD
  GREAT
  EXCELLENT
}