type Query {
  greetings: String!
  getTeacher(id: ID!): Teacher!
  getClasses(teacherID: ID!): [Class!]
}

type Mutation {
  createTeacher(data: CreateTeacherInput!): Teacher!
}

type Teacher {
  id: ID!
  name: String!
  email: EmailAddress!
  class: [Class!]
}


type Class {
  id: ID!
  name: String!
  lessons: [Lesson!]
  students: [Student!]
  lessonTypes: [String!]
  teacher: Teacher!
}

type Lesson {
  id: ID!
  date: Date!
  type: String!
  description: String
  evaluations: [Evaluation!]
  class: Class!
}

type Evaluation {
  id: ID!
  student: Student!
  skillsRating: Int
  behaviourRating: Int
  notes: String
  lesson: Lesson!
}

type Student {
  id: ID!
  name: String!
  class: Class!
  evaluations: [Evaluation!]
}

input CreateTeacherInput {
  name: String!
  email: EmailAddress!
}