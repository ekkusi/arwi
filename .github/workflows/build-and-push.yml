name: Build and push Docker image

on:
  push:
    branches:
      - 'main'


jobs:
  # tests:
  #   name: Run tests
  #   runs-on: ubuntu-latest
  #   services:
  #     postgres:
  #       image: postgres:15
  #       env:
  #         POSTGRES_USER: user
  #         POSTGRES_PASSWORD: password
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         # Maps tcp port 5432 on service container to the host
  #         - 5432:5432
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: 'Create .env.test file'
  #       working-directory: next
  #       run: |
  #         touch .env.test
  #         echo DATABASE_URL=postgresql://user:password@localhost:5432/arwi-test >> .env.test
  #         cat .env.test

  #     - name: Install dependencies
  #       run: yarn install
  #     - name: Run tests
  #       run: yarn test-with-setup
  docker:
    # needs: tests
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: next
          push: true
          tags: ekkusi/arwi:latest
          platforms: linux/amd64
          secrets: |
            "secret=${{ secrets.SECRET }}"
            "database_url=${{ secrets.DATABASE_URL }}"
            "public_base_url=${{ secrets.NEXT_PUBLIC_BASE_URL }}"
            "public_graphql_api_url=${{ secrets.NEXT_PUBLIC_GRAPHQL_API_URL }}"
            "next_auth_url=${{ secrets.NEXTAUTH_URL }}"
            "openai_api_key=${{ secrets.OPENAI_API_KEY }}"
            "is_https=${{ secrets.IS_HTTPS }}"